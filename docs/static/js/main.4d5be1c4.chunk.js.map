{"version":3,"sources":["components/AddCategory.js","helpers/getGifs.js","components/GifGridItem.js","components/GifGrid.js","hooks/useFetchGifs.js","GifExpertApp.js","index.js"],"names":["AddCategory","setCategories","useState","inputValue","setInputValue","onSubmit","e","preventDefault","trim","length","cats","type","value","onChange","target","getGifs","category","a","url","encodeURI","fetch","respuesta","json","data","gifs","map","img","id","title","images","downsized_medium","GifGridItem","className","src","alt","GifGrid","loading","state","setstate","useEffect","then","imgs","useFetchGifs","GifExpertApp","categories","ReactDOM","render","document","getElementById"],"mappings":"mMAGaA,EAAc,SAAC,GAAuB,IAArBC,EAAoB,EAApBA,cAAoB,EAEVC,mBAAS,IAFC,mBAEvCC,EAFuC,KAE3BC,EAF2B,KAmB9C,OACI,sBAAMC,SAZW,SAACC,GAClBA,EAAEC,iBAEGJ,EAAWK,OAAOC,OAAS,IAC5BR,GAAe,SAAAS,GAAI,OAAKP,GAAL,mBAAoBO,OACvCN,EAAc,MAOlB,SACE,uBACEO,KAAK,OACLC,MAAOT,EACPU,SApBkB,SAACP,GACvBF,EAAcE,EAAEQ,OAAOF,a,uBCPlBG,EAAO,uCAAG,WAAOC,GAAP,uBAAAC,EAAA,6DAEbC,EAFa,iDAEoCC,UAAWH,GAF/C,+DAGKI,MAAOF,GAHZ,cAGbG,EAHa,gBAIIA,EAAUC,OAJd,uBAIXC,EAJW,EAIXA,KAEFC,EAAOD,EAAKE,KAAK,SAAAC,GAAQ,IAAD,EAC1B,MAAO,CACHC,GAAID,EAAIC,GACRC,MAAOF,EAAIE,MACXV,IAAG,UAAEQ,EAAIG,cAAN,aAAE,EAAYC,iBAAiBZ,QAVvB,kBAcZM,GAdY,4CAAH,sDCCPO,EAAc,SAAC,GAAmB,IAAlBH,EAAiB,EAAjBA,MAAOV,EAAU,EAAVA,IAEhC,OACI,sBAAKc,UAAU,yCAAf,UACI,qBAAKC,IAAMf,EAAMgB,IAAMN,IACvB,kCAAMA,EAAN,WCHCO,EAAU,SAAC,GAAkB,IAAhBnB,EAAe,EAAfA,SAAe,ECAb,SAAEA,GAAe,IAAD,EAEdd,mBAAS,CAC/BqB,KAAM,GACNa,SAAS,IAJ2B,mBAEjCC,EAFiC,KAE1BC,EAF0B,KA8BxC,OAtBAC,qBAAW,WAEPxB,EAASC,GACJwB,MAAM,SAAAC,GAEHH,EAAS,CACLf,KAAMkB,EACNL,SAAS,SAKtB,CAACpB,IAUGqB,ED5B0BK,CAAc1B,GAAlCa,EAFwB,EAE7BN,KAAaa,EAFgB,EAEhBA,QAIrB,OACI,qCACA,qBAAIJ,UAAU,oCAAd,cAAqDhB,EAArD,OAEEoB,GAAW,mBAAGJ,UAAU,mCAAb,qBAEb,qBAAKA,UAAU,YAAf,SAGQH,EAAOJ,KAAK,SAAAC,GAAG,OACX,cAAC,EAAD,CAEIR,IAAKQ,EAAIR,IACTU,MAAOF,EAAIE,OAFNF,EAAIC,aEjBpBgB,EAAe,WAAM,MAGMzC,mBAAS,CAAC,cAHhB,mBAGvB0C,EAHuB,KAGX3C,EAHW,KAU9B,OACI,qCACI,8CACA,cAAC,EAAD,CAAaA,cAAgBA,IAC7B,uBAGA,6BAEQ2C,EAAWnB,KAAK,SAAAT,GAAQ,OACpB,cAAC,EAAD,CAEIA,SAAWA,GADLA,Y,MCpBlC6B,IAASC,OACP,cAAC,EAAD,IACAC,SAASC,eAAe,W","file":"static/js/main.4d5be1c4.chunk.js","sourcesContent":["import React, { useState } from 'react'\r\nimport PropTypes from 'prop-types';\r\n\r\nexport const AddCategory = ({ setCategories }) => {\r\n\r\n    const [inputValue, setInputValue] = useState('')\r\n\r\n    const handleInputChange = (e) => {\r\n        setInputValue(e.target.value);\r\n    }\r\n\r\n    const handleSubmit = (e) => {\r\n        e.preventDefault();\r\n\r\n        if ( inputValue.trim().length > 2 ) {\r\n            setCategories( cats => [inputValue, ...cats,] );\r\n            setInputValue('');\r\n        }\r\n\r\n        //console.log('Submit hecho')\r\n    }\r\n\r\n    return (\r\n        <form onSubmit={handleSubmit}>\r\n          <input \r\n            type=\"text\"\r\n            value={inputValue}\r\n            onChange={ handleInputChange }\r\n          />  \r\n        </form>\r\n    )\r\n}\r\n\r\nAddCategory.propTypes = {\r\n    setCategories: PropTypes.func.isRequired\r\n}","\r\nexport const getGifs = async( category ) => {\r\n\r\n    const url = `https://api.giphy.com/v1/gifs/search?q=${ encodeURI( category ) }&limit=10&api_key=PbQDkxYjPM0u824IVyQ3Ep9KHHUf9Lud`\r\n    const respuesta = await fetch( url );\r\n    const { data } = await respuesta.json();\r\n\r\n    const gifs = data.map( img => {\r\n        return {\r\n            id: img.id,\r\n            title: img.title,\r\n            url: img.images?.downsized_medium.url\r\n        }\r\n    })\r\n\r\n    return gifs;\r\n\r\n} ","import React from 'react'\r\n\r\nexport const GifGridItem = ({title, url }) => {\r\n   \r\n    return (\r\n        <div className='card animate__animated animate__fadeIn' >\r\n            <img src={ url } alt={ title } />\r\n            <p> { title } </p>\r\n        </div>\r\n    )\r\n}","import React from 'react'\r\nimport { useFetchGifs } from '../hooks/useFetchGifs'\r\nimport { GifGridItem } from './GifGridItem';\r\n\r\nexport const GifGrid = ({ category }) => {\r\n\r\n    const { data:images, loading } = useFetchGifs( category );\r\n\r\n\r\n\r\n    return (\r\n        <>\r\n        <h3 className=\"animate__animated animate__fadeIn\"> { category } </h3>\r\n\r\n        { loading && <p className=\"animate__animated animate__flash\">Loading</p> }\r\n\r\n        <div className=\"card-grid\">\r\n        \r\n            {\r\n                images.map( img => ( \r\n                    <GifGridItem \r\n                        key={img.id}\r\n                        url={img.url} \r\n                        title={img.title}\r\n                    />\r\n                ) )\r\n            }\r\n            \r\n        </div>\r\n        </>\r\n    )\r\n}\r\n","import { useEffect, useState } from \"react\"\r\nimport {getGifs} from '../helpers/getGifs'\r\n\r\n\r\nexport const useFetchGifs = ( category ) => {\r\n\r\n    const [state, setstate] = useState({\r\n        data: [],\r\n        loading: true\r\n    });\r\n\r\n    \r\n    useEffect( () => {\r\n\r\n        getGifs( category )\r\n            .then( imgs => {\r\n\r\n                setstate({\r\n                    data: imgs,\r\n                    loading: false\r\n                });\r\n                \r\n            })\r\n\r\n    }, [category])\r\n\r\n    //setTimeout( () => {\r\n    //    setstate({\r\n    //        data: [1,2,3,4,5],\r\n    //        loading: false\r\n    //    })\r\n    //}, 3000 );\r\n\r\n\r\n    return state;\r\n\r\n\r\n}","import React, { useState } from 'react'\r\nimport { AddCategory } from './components/AddCategory';\r\nimport { GifGrid } from './components/GifGrid';\r\n\r\nexport const GifExpertApp = () => {\r\n\r\n    //const categories = ['One punch', 'Samurai X', 'Dragon Ball'];\r\n    const [categories, setCategories] = useState(['One punch']);\r\n\r\n    //const handleAdd = () => {\r\n    //    //setCategories( [...categories, 'HunterXHunter'] )\r\n    //    setCategories( cats => [...cats, 'HunterXHunter'] )\r\n    //}\r\n\r\n    return (\r\n        <>\r\n            <h2>GifExpertApp</h2>\r\n            <AddCategory setCategories={ setCategories } />\r\n            <hr />\r\n\r\n\r\n            <ol>\r\n                { \r\n                    categories.map( category => \r\n                        <GifGrid\r\n                            key={ category } \r\n                            category={ category } \r\n                        />\r\n                    )\r\n                }\r\n            </ol>\r\n        </>\r\n    )\r\n}\r\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport { GifExpertApp } from './GifExpertApp';\nimport './index.css';\n\nReactDOM.render(\n  <GifExpertApp />,\n  document.getElementById('root')\n);\n"],"sourceRoot":""}